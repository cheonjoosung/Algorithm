package codeground;

import java.math.BigInteger;
import java.util.Scanner;

//25ë²ˆ 3N+1 
public class Sol25 {
	static int Answer;

	public static void main(String args[]) throws Exception	{
		Scanner sc = new Scanner(System.in);

		int T = sc.nextInt();
		for(int test_case = 0; test_case < T; test_case++) {

			Answer = 0;
			
			int k = sc.nextInt();

			BigInteger max = BigInteger.valueOf(2).pow(k);
			
			long min = i;
			
			for(i)
			BigInteger minNumber = BigInteger.valueOf(2).pow(k);

			
			BigInteger temp = maxNumber;
			
			long count = 0;
			
			/*
			while(!temp.equals(BigInteger.ONE)) {
				count++;
				//System.out.println(temp);
				temp = temp.divide(BigInteger.valueOf(2));
				
				if(temp.equals(BigInteger.ONE) || temp.equals(BigInteger.valueOf(2)) || temp.equals(BigInteger.valueOf(4)) ) {
					break;
				}
				
				if(!(temp.add(BigInteger.valueOf(-1))).mod(BigInteger.valueOf(3)).equals(BigInteger.ZERO )) {
					continue;
				} else {
					BigInteger val = temp;
					int tempCount = (int) count;
					
					while(tempCount > 0) {
						tempCount--;
						
						if( (val.add(BigInteger.valueOf(-1)).mod(BigInteger.valueOf(3)).equals(BigInteger.ZERO))) {
							val = val.add(BigInteger.valueOf(-1)).divide(BigInteger.valueOf(3));
						} else {
							val = val.multiply(BigInteger.valueOf(2));
						}
						//System.out.println(val);
					}
					minNumber = val;
				}
			}
			*/

			System.out.println("Case #"+(test_case+1));
			System.out.println(minNumber + " " + max);
		}
	}


}
