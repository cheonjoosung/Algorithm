package codeground;

import java.math.BigInteger;
import java.util.Scanner;

//25ë²ˆ 3N+1 
public class Sol25 {
	static int Answer;

	public static void main(String args[]) throws Exception	{
		Scanner sc = new Scanner(System.in);

		int T = sc.nextInt();
		for(int test_case = 0; test_case < T; test_case++) {

			Answer = 0;
			
			int k = sc.nextInt();

			BigInteger max = BigInteger.valueOf(2).pow(k);
			
			long min = 1;
			long num = 0;
			int totalCount = 0;
			
			for(int i=1; ; i++) {
				num = i;
				
				for(int j=0 ; j<k ;j++) {
					if(num % 2 == 0) {
						num = num/2;
						totalCount++;
					} else if(num %2 !=0 && num !=1){
						num = 3*num + 1;
						totalCount++;
					} else if(num == 1) {
						break;
					}
				}
				
				if(totalCount == k && num == 1) {
					min = i;
					break;
				}
				
				break;
			}
			
			/*
			while(!temp.equals(BigInteger.ONE)) {
				count++;
				//System.out.println(temp);
				temp = temp.divide(BigInteger.valueOf(2));
				
				if(temp.equals(BigInteger.ONE) || temp.equals(BigInteger.valueOf(2)) || temp.equals(BigInteger.valueOf(4)) ) {
					break;
				}
				
				if(!(temp.add(BigInteger.valueOf(-1))).mod(BigInteger.valueOf(3)).equals(BigInteger.ZERO )) {
					continue;
				} else {
					BigInteger val = temp;
					int tempCount = (int) count;
					
					while(tempCount > 0) {
						tempCount--;
						
						if( (val.add(BigInteger.valueOf(-1)).mod(BigInteger.valueOf(3)).equals(BigInteger.ZERO))) {
							val = val.add(BigInteger.valueOf(-1)).divide(BigInteger.valueOf(3));
						} else {
							val = val.multiply(BigInteger.valueOf(2));
						}
						//System.out.println(val);
					}
					minNumber = val;
				}
			}
			*/

			System.out.println("Case #"+(test_case+1));
			System.out.println(minNumber + " " + max);
		}
	}


}
