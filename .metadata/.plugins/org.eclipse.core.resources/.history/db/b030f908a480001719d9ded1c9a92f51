package codeground;

import java.math.BigInteger;
import java.util.Scanner;

//25ë²ˆ 3N+1 
public class Sol25 {
	static int Answer;

	public static void main(String args[]) throws Exception	{
		Scanner sc = new Scanner(System.in);

		int T = sc.nextInt();
		for(int test_case = 0; test_case < T; test_case++) {

			Answer = 0;
			
			int k = sc.nextInt();
			
			BigInteger minNumber = BigInteger.valueOf(2).pow(k);
			BigInteger maxNumber = BigInteger.valueOf(2).pow(k);
			
			BigInteger temp = maxNumber;
			
			long count = 0;
			
			while(temp != 1) {
				count++;
				temp /= 2;
				
				if(temp == 1 || temp == 2 || temp == 4) {
					break;
				}
				
				if( (temp - 1) % 3 != 0) {
					continue;
				} else {
					long val = temp;
					int tempCount = (int) count;
					
					while(tempCount > 0) {
						tempCount--;
						
						if( (val-1) % 3 == 0) {
							val = (val-1) / 3;
						} else {
							val = val*2;
						}
						//System.out.println(val);
					}
					
					minNumber = val;
					
				}
			}

			System.out.println("Case #"+(test_case+1));
			System.out.println(minNumber + " " + maxNumber);
		}
	}


}
